name: Android Build & Release (Tag/Manual) - v4

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  issues: write

jobs:
  build_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js with Yarn Cache
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'yarn'

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          java-version: '22'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Cache Gradle Packages
        id: cache-gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache EAS CLI
        id: cache-eas
        uses: actions/cache@v3
        with:
          path: ~/.eas-cli
          key: ${{ runner.os }}-eas-${{ hashFiles('**/eas.json') }}
          restore-keys: |
            ${{ runner.os }}-eas-

      - name: Setup Expo CLI
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Build Android APK and AAB
        run: |
          npx eas-cli build --platform android --profile production --local --non-interactive --output app-production.aab
          npx eas-cli build --platform android --profile preview --local --non-interactive --output app-preview.apk

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: app-preview.apk

      - name: Upload AAB Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab
          path: app-production.aab

      - name: Create/Update GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          RELEASE_NAME="Release $TAG_NAME"
          if ! gh release view "$TAG_NAME" > /dev/null 2>&1; then
            gh release create "$TAG_NAME" app-preview.apk app-production.aab \
              --title "$RELEASE_NAME" \
              --notes "APK and AAB for version $TAG_NAME"
          else
            gh release upload "$TAG_NAME" app-preview.apk app-production.aab --clobber
          fi
